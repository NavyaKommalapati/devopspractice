pipeline
{

agent any;
stages
{
stage("checkout scm")

{
steps
{

git credentialsId: 'pipeline2eg', url: 'https://github.com/NavyaKommalapati/devopspractice.git'

}
}

stage("execute dockerfile and build image")

{
steps
{

sh 'docker build -t 031196/dockerdemorepository:6.0 -f $WORKSPACE/Dockerfile .'
}
}
stage('push newly created image into repository')
{
steps
{

withDockerRegistry(credentialsId: 'Dockerregistrypush',  url: 'https://index.docker.io/v1/')
{
sh 'docker push 031196/dockerdemorepository:6.0' 
}
}

}
stage("deploy app on ansible client qa")
{
steps
{
script
{
if('${params.select_env}' == "qa")
{
ansiblePlaybook credentialsId: 'ansible', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/demo-pipeline1/qa-deploy.yml'
}
}
}
}

stage("deploy app on ansible client prod")
{
steps
{
script
{
if('${params.select_env}' == "prod")
{
ansiblePlaybook credentialsId: 'ansible', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/demo-pipeline1/prod-deploy.yml'
}
}
}
}
}
}



